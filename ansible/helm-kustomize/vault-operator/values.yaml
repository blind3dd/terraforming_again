# Default values for vault-operator
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: hashicorp/vault-operator
  pullPolicy: IfNotPresent
  tag: "1.15.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 1000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: vault-operator.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Vault Operator specific configuration
vaultOperator:
  # Vault configuration
  vault:
    address: "https://internal.coderedalarmtech.com/vault"
    namespace: "vault"
    authMethod: "token"
    # Token will be injected from SSM Parameter Store
    tokenPath: "/vault/operator/token"
    # Alternative: use AWS IAM auth method
    awsAuth:
      enabled: false
      role: "vault-operator-role"
      region: "us-east-1"
  
  # AWS SSM integration
  ssm:
    enabled: true
    region: "us-east-1"
    parameterStore:
      # SSM Parameter Store paths for secrets
      vaultToken: "/vault/operator/token"
      vaultConfig: "/vault/operator/config"
      awsCredentials: "/vault/operator/aws-credentials"
      # Ansible Vault password injection
      ansibleVaultPassword: "/ansible/vault/password"
      # Custom parameter paths
      customSecrets: []
        # - path: "/app/database/password"
        #   key: "db_password"
        # - path: "/app/api/keys"
        #   key: "api_key"
    
    # SSM Parameter Store configuration
    parameterStoreConfig:
      # Refresh interval for SSM parameters
      refreshInterval: "5m"
      # Decrypt parameters
      withDecryption: true
      # Parameter filters
      filters: []
        # - name: "tag:Environment"
        #   values: ["dev", "test", "sandbox"]
  
  # AWS IAM configuration
  aws:
    region: "us-east-1"
    credentials:
      secretName: "vault-operator-aws-credentials"
      secretKey: "credentials"
    # IAM role for SSM access
    iamRole: "arn:aws:iam::123456789012:role/VaultOperatorSSMRole"
  
  # Git configuration for Vault policies
  git:
    repository: "https://github.com/blind3dd/database_CI.git"
    branch: "main"
    path: "vault/policies/"
  
  # Environment specific settings
  environment: "dev"
  logLevel: "info"
  debug: false
  
  # Vault operator features
  features:
    # Enable automatic secret rotation
    secretRotation: true
    # Enable secret synchronization
    secretSync: true
    # Enable audit logging
    auditLogging: true
    # Enable metrics collection
    metrics: true
