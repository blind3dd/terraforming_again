1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "go-mysql-api.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "go-mysql-api.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "go-mysql-api.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "go-mysql-api.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. Get the application status:
   kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "go-mysql-api.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"

3. Get the application logs:
   kubectl logs --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "go-mysql-api.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"

4. Get the application service:
   kubectl get svc --namespace {{ .Release.Namespace }} {{ include "go-mysql-api.fullname" . }}

5. Get the application deployment:
   kubectl get deployment --namespace {{ .Release.Namespace }} {{ include "go-mysql-api.fullname" . }}

6. Scale the application:
   kubectl scale deployment --namespace {{ .Release.Namespace }} {{ include "go-mysql-api.fullname" . }} --replicas={{ .Values.replicaCount }}

7. Update the application:
   helm upgrade {{ .Release.Name }} {{ .Chart.Name }} --namespace {{ .Release.Namespace }}

8. Uninstall the application:
   helm uninstall {{ .Release.Name }} --namespace {{ .Release.Namespace }}

{{- if .Values.configMap.enabled }}
9. View the ConfigMap:
   kubectl get configmap --namespace {{ .Release.Namespace }} {{ include "go-mysql-api.configMapName" . }} -o yaml

10. Update the ConfigMap:
    kubectl patch configmap --namespace {{ .Release.Namespace }} {{ include "go-mysql-api.configMapName" . }} -p '{"data":{"app.conf":"[app]\nport = 8088\nlog_level = debug"}}'
{{- end }}

{{- if .Values.secret.enabled }}
11. View the Secret (base64 encoded):
    kubectl get secret --namespace {{ .Release.Namespace }} {{ include "go-mysql-api.secretName" . }} -o yaml
{{- end }}

{{- if .Values.hpa.enabled }}
12. View the Horizontal Pod Autoscaler:
    kubectl get hpa --namespace {{ .Release.Namespace }} {{ include "go-mysql-api.hpaName" . }}
{{- end }}

{{- if .Values.ingress.enabled }}
13. View the Ingress:
    kubectl get ingress --namespace {{ .Release.Namespace }} {{ include "go-mysql-api.ingressName" . }}
{{- end }}

For more information about the application, visit:
{{- if .Chart.Home }}
  {{ .Chart.Home }}
{{- else }}
  https://github.com/blind3dd/database_CI
{{- end }}
