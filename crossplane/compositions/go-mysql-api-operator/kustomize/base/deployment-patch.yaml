apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-mysql-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: go-mysql-api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: go-mysql-api
        app.kubernetes.io/part-of: database-ci
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: go-mysql-api
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: go-mysql-api
        image: go-mysql-api:latest
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        - name: APP_NAME
          valueFrom:
            configMapKeyRef:
              name: go-mysql-api-config
              key: APP_NAME
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: go-mysql-api-config
              key: LOG_LEVEL
        - name: SERVER_PORT
          valueFrom:
            configMapKeyRef:
              name: go-mysql-api-config
              key: SERVER_PORT
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: go-mysql-api-secrets
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: go-mysql-api-secrets
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: go-mysql-api-secrets
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: go-mysql-api-secrets
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: go-mysql-api-secrets
              key: DB_PASSWORD
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
      imagePullSecrets:
      - name: ecr-secret
