#!/bin/bash
# SSH Access Script for {{ environment }}-{{ service_name }}
# This script provides easy access to the instance

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configuration
INSTANCE_IP="{{ ansible_host }}"
SSH_USER="ec2-user"
SSH_KEY="~/.ssh/id_rsa"
ENVIRONMENT="{{ environment }}"
SERVICE_NAME="{{ service_name }}"

# Logging function
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check if SSH key exists
check_ssh_key() {
    if [ ! -f "$SSH_KEY" ]; then
        log_error "SSH private key not found at $SSH_KEY"
        log_info "Please ensure the SSH key is properly configured"
        exit 1
    fi
    
    # Set proper permissions
    chmod 600 "$SSH_KEY"
    log_success "SSH key found and permissions set"
}

# Test SSH connection
test_connection() {
    log_info "Testing SSH connection to $INSTANCE_IP..."
    
    if ssh -i "$SSH_KEY" -o ConnectTimeout=10 -o StrictHostKeyChecking=no "$SSH_USER@$INSTANCE_IP" "echo 'SSH connection successful'" 2>/dev/null; then
        log_success "SSH connection test passed"
        return 0
    else
        log_error "SSH connection test failed"
        return 1
    fi
}

# Connect to instance
connect() {
    log_info "Connecting to $ENVIRONMENT-$SERVICE_NAME instance..."
    log_info "Instance IP: $INSTANCE_IP"
    log_info "User: $SSH_USER"
    
    ssh -i "$SSH_KEY" \
        -o StrictHostKeyChecking=no \
        -o UserKnownHostsFile=/dev/null \
        -o ServerAliveInterval=60 \
        -o ServerAliveCountMax=3 \
        "$SSH_USER@$INSTANCE_IP"
}

# Show instance information
show_info() {
    echo ""
    echo "ðŸš€ {{ environment }}-{{ service_name }} Instance Information"
    echo "=================================================="
    echo ""
    echo "ðŸ“Š Instance Details:"
    echo "  Environment: $ENVIRONMENT"
    echo "  Service: $SERVICE_NAME"
    echo "  Instance IP: $INSTANCE_IP"
    echo "  SSH User: $SSH_USER"
    echo "  SSH Key: $SSH_KEY"
    echo ""
    echo "ðŸ”— Connection Commands:"
    echo "  SSH: ssh -i $SSH_KEY $SSH_USER@$INSTANCE_IP"
    echo "  SCP: scp -i $SSH_KEY file.txt $SSH_USER@$INSTANCE_IP:/path/"
    echo ""
    echo "ðŸ“‹ Useful Commands:"
    echo "  Check application status: sudo systemctl status {{ service_name }}"
    echo "  View logs: sudo journalctl -u {{ service_name }} -f"
    echo "  Monitor system: /home/ec2-user/monitor.sh"
    echo "  Health check: /home/ec2-user/health-check.sh"
    echo ""
}

# Main menu
show_menu() {
    echo ""
    echo "ðŸ”‘ SSH Access Menu"
    echo "=================="
    echo "1. Connect to instance"
    echo "2. Test connection"
    echo "3. Show instance information"
    echo "4. Exit"
    echo ""
    read -p "Select an option (1-4): " choice
    
    case $choice in
        1)
            check_ssh_key
            connect
            ;;
        2)
            check_ssh_key
            test_connection
            ;;
        3)
            show_info
            ;;
        4)
            log_info "Goodbye!"
            exit 0
            ;;
        *)
            log_error "Invalid option. Please select 1-4."
            show_menu
            ;;
    esac
}

# Main execution
main() {
    # Check if running interactively
    if [ -t 0 ]; then
        show_menu
    else
        # Non-interactive mode - just connect
        check_ssh_key
        connect
    fi
}

# Run main function
main "$@"
