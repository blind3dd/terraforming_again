# Default values for cluster-autoscaler
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: k8s.gcr.io/autoscaling/cluster-autoscaler
  pullPolicy: IfNotPresent
  tag: "v1.29.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 65534

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65534

service:
  type: ClusterIP
  port: 8085

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: cluster-autoscaler.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources:
  limits:
    cpu: 100m
    memory: 600Mi
  requests:
    cpu: 100m
    memory: 600Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Cluster Autoscaler specific configuration
clusterAutoscaler:
  # AWS configuration
  aws:
    region: "us-east-1"
    clusterName: "database-ci-cluster"
  
  # Scaling configuration
  scaleDown:
    enabled: true
    delayAfterAdd: "10m"
    delayAfterDelete: "10s"
    delayAfterFailure: "3m"
    unneededTime: "10m"
    utilizationThreshold: "0.5"
  
  # Node group configuration
  nodeGroups:
    - name: "kubernetes-cluster-nodegroup"
      minSize: 1
      maxSize: 10
  
  # Environment specific settings
  environment: "dev"
  logLevel: "info"
  skipNodesWithLocalStorage: true
  skipNodesWithSystemPods: true
