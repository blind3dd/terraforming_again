---
# Go MySQL API Deployment Playbook using Kustomize
# This playbook deploys the Go MySQL API application using Kustomize for environment-specific configurations

- name: Deploy Go MySQL API using Kustomize
  hosts: kubernetes_cluster
  become: false
  gather_facts: true
  
  vars:
    # Dynamic inventory variables
    k8s_cluster_name: "{{ cluster_name | default('kubernetes-cluster') }}"
    environment: "{{ env | default('dev') }}"
    app_namespace: "go-mysql-api-{{ environment }}"
    
    # Application Configuration
    app_name: "go-mysql-api"
    app_version: "{{ app_version | default('latest') }}"
    app_replicas: "{{ app_replicas | default(2) }}"
    
    # Database Configuration from dynamic inventory
    db_host: "{{ db_host | default('mysql-service') }}"
    db_port: "{{ db_port | default('3306') }}"
    db_name: "{{ db_name | default('go_mysql_api') }}"
    db_user: "{{ db_user | default('api_user') }}"
    db_password: "{{ db_password | default('changeme') }}"
    
    # AWS Configuration
    aws_account_id: "{{ aws_account_id | default('123456789012') }}"
    aws_region: "{{ aws_region | default('us-west-2') }}"
    ecr_repository: "{{ aws_account_id }}.dkr.ecr.{{ aws_region }}.amazonaws.com/go-mysql-api"
    
    # Kustomize paths
    kustomize_base_path: "{{ playbook_dir }}/../../kustomize/go-mysql-api/base"
    kustomize_overlay_path: "{{ playbook_dir }}/../../kustomize/go-mysql-api/overlays/{{ environment }}"

  pre_tasks:
    - name: Display deployment information
      debug:
        msg:
          - "Deploying Go MySQL API to cluster: {{ k8s_cluster_name }}"
          - "Environment: {{ environment }}"
          - "Namespace: {{ app_namespace }}"
          - "App Version: {{ app_version }}"
          - "Replicas: {{ app_replicas }}"
          - "Database Host: {{ db_host }}"

    - name: Verify Kubernetes cluster connectivity
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Node
      register: cluster_nodes
      failed_when: cluster_nodes.resources | length == 0

    - name: Display cluster information
      debug:
        msg:
          - "Connected to cluster with {{ cluster_nodes.resources | length }} nodes"
          - "Nodes: {{ cluster_nodes.resources | map(attribute='metadata.name') | list }}"

    - name: Verify Kustomize is installed
      command: kustomize version --short
      register: kustomize_check
      failed_when: kustomize_check.rc != 0
      changed_when: false

    - name: Display Kustomize version
      debug:
        msg: "Kustomize version: {{ kustomize_check.stdout }}"

  tasks:
    - name: Create namespace for Go MySQL API
      kubernetes.core.k8s:
        name: "{{ app_namespace }}"
        api_version: v1
        kind: Namespace
        state: present
        labels:
          name: "{{ app_namespace }}"
          app.kubernetes.io/name: "{{ app_name }}"
          app.kubernetes.io/part-of: database-ci
          environment: "{{ environment }}"
          app.kubernetes.io/managed-by: kustomize

    - name: Generate Kustomize manifests
      shell: |
        cd "{{ kustomize_overlay_path }}"
        kustomize build . > /tmp/go-mysql-api-{{ environment }}-manifests.yaml
      register: kustomize_build
      changed_when: kustomize_build.rc == 0

    - name: Display generated manifests
      debug:
        msg: "{{ kustomize_build.stdout_lines }}"
      when: kustomize_build.stdout_lines | length > 0

    - name: Apply Kustomize manifests
      shell: |
        kubectl apply -f /tmp/go-mysql-api-{{ environment }}-manifests.yaml
      register: kubectl_apply
      changed_when: kubectl_apply.rc == 0

    - name: Display apply results
      debug:
        msg: "{{ kubectl_apply.stdout_lines }}"
      when: kubectl_apply.stdout_lines | length > 0

    - name: Wait for deployment to be ready
      kubernetes.core.k8s_info:
        api_version: apps/v1
        kind: Deployment
        name: "{{ app_name }}"
        namespace: "{{ app_namespace }}"
      register: deployment_status
      until: deployment_status.resources | selectattr('status.conditions') | selectattr('type', 'equalto', 'Available') | map(attribute='status') | first == 'True'
      retries: 30
      delay: 10

    - name: Verify deployment status
      kubernetes.core.k8s_info:
        api_version: apps/v1
        kind: Deployment
        name: "{{ app_name }}"
        namespace: "{{ app_namespace }}"
      register: final_deployment_status

    - name: Display deployment status
      debug:
        msg:
          - "Deployment: {{ final_deployment_status.resources[0].metadata.name }}"
          - "Ready Replicas: {{ final_deployment_status.resources[0].status.readyReplicas | default(0) }}"
          - "Available Replicas: {{ final_deployment_status.resources[0].status.availableReplicas | default(0) }}"
          - "Desired Replicas: {{ final_deployment_status.resources[0].spec.replicas }}"

    - name: Verify service is running
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Service
        name: "{{ app_name }}"
        namespace: "{{ app_namespace }}"
      register: service_status

    - name: Display service status
      debug:
        msg:
          - "Service: {{ service_status.resources[0].metadata.name }}"
          - "Type: {{ service_status.resources[0].spec.type }}"
          - "Cluster IP: {{ service_status.resources[0].spec.clusterIP }}"
          - "Ports: {{ service_status.resources[0].spec.ports | map(attribute='port') | list }}"

    - name: Verify pods are running
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: "{{ app_namespace }}"
        label_selectors:
          - app.kubernetes.io/name={{ app_name }}
      register: pods_status

    - name: Display pod status
      debug:
        msg: "Pod {{ item.metadata.name }} is {{ item.status.phase }}"
      loop: "{{ pods_status.resources }}"

  post_tasks:
    - name: Clean up temporary files
      file:
        path: "/tmp/go-mysql-api-{{ environment }}-manifests.yaml"
        state: absent

    - name: Display deployment summary
      debug:
        msg:
          - "âœ… Go MySQL API deployment completed successfully"
          - "Environment: {{ environment }}"
          - "Namespace: {{ app_namespace }}"
          - "Replicas: {{ final_deployment_status.resources[0].status.readyReplicas | default(0) }}/{{ final_deployment_status.resources[0].spec.replicas }}"
          - "Service: {{ service_status.resources[0].spec.clusterIP }}:{{ service_status.resources[0].spec.ports[0].port }}"
          - "Pods: {{ pods_status.resources | length }} running"

    - name: Get service endpoints
      shell: |
        kubectl get endpoints {{ app_name }} -n {{ app_namespace }} -o jsonpath='{.subsets[*].addresses[*].ip}'
      register: service_endpoints
      changed_when: false

    - name: Display service endpoints
      debug:
        msg: "Service endpoints: {{ service_endpoints.stdout }}"
