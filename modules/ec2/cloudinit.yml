#cloud-config
# CloudInit configuration for EC2 instances
# This file configures users, SSH keys, and system settings

users:
  - name: ec2-user
    lock_passwd: false
    hashed_passwd: ${ec2_user_password}
    shell: /bin/bash
    sudo: ALL=(ALL) NOPASSWD:ALL
    ssh_authorized_keys:
      - ${ssh_public_key}
    groups: [wheel, docker]
    home: /home/ec2-user
    create_home: true

# Package installation
packages:
  - git
  - docker
  - docker-compose
  - mysql
  - awscli
  - jq
  - htop
  - vim
  - wget
  - curl
  - unzip
  - tree
  - fortune-mod
  - cowsay
  - lolcat
  - figlet
  - sl
  - cmatrix

# Package repositories
package_update: true
package_upgrade: true

# Write files
write_files:
  - path: /etc/sudoers.d/ec2-user
    permissions: '0440'
    content: |
      # Sudoers configuration for ec2-user
      ec2-user ALL=(ALL) NOPASSWD:ALL
      Defaults:ec2-user !requiretty
      Defaults:ec2-user env_keep += "AWS_*"

  - path: /etc/ssh/sshd_config.d/ec2-user.conf
    permissions: '0644'
    content: |
      # SSH configuration for ec2-user
      PermitRootLogin no
      PasswordAuthentication yes
      PubkeyAuthentication yes
      AuthorizedKeysFile .ssh/authorized_keys
      ClientAliveInterval 60
      ClientAliveCountMax 3

  - path: /home/ec2-user/.ssh/authorized_keys
    owner: ec2-user:ec2-user
    permissions: '0600'
    content: |
      ${ssh_public_key}

  - path: /home/ec2-user/.bashrc
    owner: ec2-user:ec2-user
    permissions: '0644'
    content: |
      # .bashrc for ec2-user
      
      # Source global definitions
      if [ -f /etc/bashrc ]; then
        . /etc/bashrc
      fi

      # User specific environment
      PATH="$HOME/.local/bin:$HOME/bin:$PATH"
      export PATH

      # AWS CLI configuration
      export AWS_DEFAULT_REGION=${region}
      export AWS_PAGER=""

      # Docker configuration
      export DOCKER_BUILDKIT=1
      export COMPOSE_DOCKER_CLI_BUILD=1

      # Aliases
      alias ll='ls -alF'
      alias la='ls -A'
      alias l='ls -CF'
      alias ..='cd ..'
      alias ...='cd ../..'
      alias grep='grep --color=auto'
      alias fgrep='fgrep --color=auto'
      alias egrep='egrep --color=auto'

      # Fun welcome message
      if [ -f /usr/games/fortune ]; then
        echo "🎉 Welcome to ${environment}-${service_name} instance!"
        echo "🐮 $(fortune | cowsay -f tux)"
        echo ""
        echo "📋 Useful commands:"
        echo "  docker ps                    # List running containers"
        echo "  docker-compose up -d         # Start services"
        echo "  aws ssm get-parameter --name /${environment}/${service_name}/db/password --with-decryption"
        echo "  sudo systemctl status docker # Check Docker status"
        echo ""
      fi

  - path: /home/ec2-user/welcome.sh
    owner: ec2-user:ec2-user
    permissions: '0755'
    content: |
      #!/bin/bash
      # Welcome script for EC2 instance
      
      echo "🚀 ${environment}-${service_name} Instance Ready!"
      echo "================================================"
      echo ""
      echo "📊 Instance Information - Magic IP:"
      echo "  Environment: ${environment}"
      echo "  Service: ${service_name}"
      echo "  Instance ID: $(curl -s http://169.254.169.254/latest/meta-data/instance-id)"
      echo "  Instance Type: $(curl -s http://169.254.169.254/latest/meta-data/instance-type)"
      echo "  Availability Zone: $(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)"
      echo ""
      echo "🔧 Services:"
      echo "  Docker: $(systemctl is-active docker)"
      echo "  SSH: $(systemctl is-active sshd)"
      echo ""
      echo "📁 Directories:"
      echo "  Application: /home/ec2-user/app"
      echo "  Logs: /home/ec2-user/logs"
      echo "  Config: /home/ec2-user/config"
      echo ""
      echo "🔑 Access:"
      echo "  SSH: ssh -i key.pem ec2-user@$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)"
      echo ""
      
      # Fun message
      if command -v fortune &> /dev/null && command -v cowsay &> /dev/null; then
        echo "🎭 Random wisdom:"
        fortune | cowsay -f tux
      fi

# Run commands
runcmd:
  # Start and enable services
  - systemctl enable docker
  - systemctl start docker
  - systemctl enable sshd
  - systemctl restart sshd
  
  # Create application directories
  - mkdir -p /home/ec2-user/app
  - mkdir -p /home/ec2-user/logs
  - mkdir -p /home/ec2-user/config
  - mkdir -p /home/ec2-user/ssh_keys
  
  # Set proper permissions
  - chown -R ec2-user:ec2-user /home/ec2-user
  - chmod 700 /home/ec2-user/.ssh
  - chmod 600 /home/ec2-user/.ssh/authorized_keys
  
  # Configure Docker
  - usermod -aG docker ec2-user
  - systemctl restart docker
  
  # Install additional tools
  - yum install -y epel-release
  - yum install -y python3-pip
  
  # Configure AWS CLI with IAMv2 authentication
  - |
    # Get AWS region from instance metadata
    AWS_REGION=$(curl -s http://169.254.169.254/latest/meta-data/placement/region)
    aws configure set default.region "$AWS_REGION"
    aws configure set default.output json
    
    # Configure AWS CLI to use instance metadata service v2
    aws configure set default.imds_use_ipv6 false
    aws configure set default.imds_use_ipv4 true
    
    # Set up AWS CLI to use instance profile
    export AWS_DEFAULT_REGION="$AWS_REGION"
    export AWS_PAGER=""
  
  # Create application startup script
  - |
    cat > /home/ec2-user/start-app.sh << 'EOF'
    #!/bin/bash
    # Application startup script
    
    echo "Starting ${service_name} application..."
    
    # Set environment variables
    export ENVIRONMENT=${environment}
    export SERVICE_NAME=${service_name}
    
    # Start the application
    cd /home/ec2-user/app
    docker-compose up -d
    
    echo "Application started successfully!"
    EOF
  
  - chmod +x /home/ec2-user/start-app.sh
  - chown ec2-user:ec2-user /home/ec2-user/start-app.sh
  
  # Run welcome script
  - /home/ec2-user/welcome.sh
  
  # Final system update
  - yum update -y

# Final message
final_message: "🎉 CloudInit completed successfully! Instance is ready for use."
