---
# Operators Deployment Playbook using Helm Charts
# This playbook deploys Terraform, Vault, and Ansible operators using Helm

- name: Deploy Kubernetes Operators via Helm
  hosts: kubernetes_cluster
  become: false
  gather_facts: true

  vars:
    # Dynamic inventory variables
    k8s_cluster_name: "{{ cluster_name | default('kubernetes-cluster') }}"
    operators_namespace: "{{ operators_namespace | default('operators') }}"
    environment: "{{ env | default('dev') }}"

    # AWS Configuration from dynamic inventory
    aws_account_id: "{{ aws_account_id | default('123456789012') }}"
    aws_region: "{{ aws_region | default('us-west-2') }}"

    # Terraform Configuration
    terraform_state_bucket: "{{ terraform_state_bucket | default('terraform-state-bucket') }}"
    terraform_state_lock_table: "{{ terraform_state_lock_table | default('terraform-state-lock') }}"

    # Vault Configuration
    vault_server_enabled: "{{ vault_server_enabled | default(false) }}"
    vault_server_replicas: "{{ vault_server_replicas | default(1) }}"

    # Ansible Configuration
    ansible_vault_password: "{{ ansible_vault_password | default('changeme') }}"
    ansible_inventory_path: "{{ ansible_inventory_path | default('/etc/ansible/inventory') }}"

  pre_tasks:
    - name: Display deployment information
      ansible.builtin.debug:
        msg:
          - "Deploying operators to cluster: {{ k8s_cluster_name }}"
          - "Namespace: {{ operators_namespace }}"
          - "Environment: {{ environment }}"
          - "AWS Region: {{ aws_region }}"

    - name: Verify Kubernetes cluster connectivity
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Node
        register: cluster_nodes
        failed_when: cluster_nodes.resources | length == 0

    - name: Display cluster information
      ansible.builtin.debug:
        msg:
          - "Connected to cluster with {{ cluster_nodes.resources | length }} nodes"
          - "Nodes: {{ cluster_nodes.resources | map(attribute='metadata.name') | list }}"

  tasks:
    - name: Install Helm if not present
      block:
        - name: Check if Helm is installed
          ansible.builtin.command: helm version --short
            register: helm_check
            failed_when: false
            changed_when: false

        - name: Install Helm
          ansible.builtin.shell: |
            curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          when: helm_check.rc != 0

        - name: Verify Helm installation
          ansible.builtin.command: helm version --short
            register: helm_version
            changed_when: false

        - name: Display Helm version
          ansible.builtin.debug:
            msg: "Helm version: {{ helm_version.stdout }}"

    - name: Add Helm repositories
      kubernetes.core.helm_repository:
        name: "{{ item.name }}"
        repo_url: "{{ item.url }}"
      loop:
        - name: hashicorp
          url: https://helm.releases.hashicorp.com
        - name: terraform-operator
          url: https://github.com/oam-dev/terraform-controller/releases/download/v0.8.0
        - name: ansible-operator
          url: https://operatorhub.io/charts

    - name: Create namespace for operators
      kubernetes.core.k8s:
        name: "{{ operators_namespace }}"
        api_version: v1
        kind: Namespace
        state: present
        labels:
        name: "{{ operators_namespace }}"
          app.kubernetes.io/part-of: "operators"
          app.kubernetes.io/managed-by: "ansible"

    - name: Deploy Terraform Operator via Helm
      kubernetes.core.helm:
        name: terraform-operator
        chart_ref: terraform-operator/terraform-operator
        release_namespace: "{{ operators_namespace }}"
        create_namespace: false
        values:
        replicaCount: 1
        image:
        repository: oamdev/terraform-controller
        tag: v0.8.0
        pullPolicy: IfNotPresent
        resources:
        requests:
        cpu: "100m"
        memory: "256Mi"
        limits:
        cpu: "500m"
        memory: "512Mi"
        serviceAccount:
        create: true
        name: terraform-operator
        rbac:
        create: true
        terraform:
        version: "1.5.0"
        backend:
        type: "s3"
        config:
        bucket: "{{ terraform_state_bucket }}"
        region: "{{ aws_region }}"
        key: "terraform.tfstate"
        dynamodb_table: "{{ terraform_state_lock_table }}"
        env:
            - name: AWS_REGION
              value: "{{ aws_region }}"
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: secret-access-key
              when: deploy_terraform_operator | default(true)
      tags: [terraform, operator]

    - name: Deploy HashiCorp Vault Operator via Helm
      kubernetes.core.helm:
        name: vault-operator
        chart_ref: hashicorp/vault-operator
        release_namespace: "{{ operators_namespace }}"
        create_namespace: false
        values:
        replicaCount: 1
        image:
        repository: hashicorp/vault-operator
        tag: latest
        pullPolicy: IfNotPresent
        resources:
        requests:
        cpu: "100m"
        memory: "256Mi"
        limits:
        cpu: "500m"
        memory: "512Mi"
        serviceAccount:
        create: true
        name: vault-operator
        rbac:
        create: true
        vault:
        enabled: "{{ vault_server_enabled }}"
        server:
        replicas: "{{ vault_server_replicas }}"
        image:
        repository: hashicorp/vault
        tag: latest
        resources:
        requests:
        cpu: "100m"
        memory: "256Mi"
        limits:
        cpu: "500m"
        memory: "512Mi"
        config:
        storage:
      # Vault operator deployment handled entirely by Helm above
      when: deploy_vault_operator | default(true)
      tags: [vault, operator]

    - name: Deploy Ansible Operator via Helm
      kubernetes.core.helm:
        name: ansible-operator
        chart_ref: ansible-operator/ansible-operator
        release_namespace: "{{ operators_namespace }}"
        create_namespace: false
        values:
        replicaCount: 1
        image:
        repository: ansible/ansible-runner
        tag: latest
        pullPolicy: IfNotPresent
        resources:
        requests:
        cpu: "100m"
        memory: "256Mi"
        limits:
        cpu: "500m"
        memory: "512Mi"
        serviceAccount:
        create: true
        name: ansible-operator
        rbac:
        create: true
        ansible:
        vaultPassword: "{{ ansible_vault_password }}"
        inventory: "{{ ansible_inventory_path }}"
        env:
            - name: ANSIBLE_VAULT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ansible-vault-password
                  key: password
              when: deploy_ansible_operator | default(true)
      tags: [ansible, operator]

    - name: Wait for operators to be ready
      kubernetes.core.k8s_info:
        api_version: apps/v1
        kind: Deployment
        namespace: "{{ operators_namespace }}"
        label_selectors:
          - app.kubernetes.io/name=terraform-operator
          - app.kubernetes.io/name=vault-operator
          - app.kubernetes.io/name=ansible-operator
        register: operator_deployments
        until: operator_deployments.resources | length >= 3
        retries: 30
        delay: 10

    - name: Verify operator deployments
      kubernetes.core.k8s_info:
        api_version: apps/v1
        kind: Deployment
        namespace: "{{ operators_namespace }}"
        register: all_deployments

    - name: Display operator status
      ansible.builtin.debug:
        msg: "Operator {{ item.metadata.name }} is {{ item.status.conditions | selectattr('type', 'equalto', 'Available') | map(attribute='status') | first }}"
      loop: "{{ all_deployments.resources }}"
      when: item.metadata.name in ['terraform-operator', 'vault-operator', 'ansible-operator']

  post_tasks:
    - name: Display Helm releases
      ansible.builtin.shell: helm list -n "{{ operators_namespace }}"
        register: helm_releases
        changed_when: false

    - name: Show deployed operators
      ansible.builtin.debug:
        msg: "{{ helm_releases.stdout_lines }}"

    - name: Operators deployment completed successfully
      ansible.builtin.debug:
        msg:
          - "âœ… Kubernetes operators deployment completed"
          - "Cluster: {{ k8s_cluster_name }}"
          - "Namespace: {{ operators_namespace }}"
          - "Environment: {{ environment }}"
          - "Deployed operators: Terraform, Vault, Ansible"
