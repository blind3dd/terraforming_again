---
# YubiKey AWS Assume Role Ansible Playbook
# This playbook sets up secure AWS assume role operations with YubiKey hardware authentication

- name: YubiKey AWS Assume Role Setup
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    # YubiKey Configuration
    yubikey_slot: "9a"
    yubikey_algorithm: "RSA2048"

    # AWS Configuration
    aws_region: "us-east-1"
    aws_account_id: ""
    default_role_name: ""
    default_session_name: "yubikey-session"

    # Security Settings
    require_yubikey_auth: true
    cache_tokens: false
    token_cache_duration: 300  # 5 minutes

    # Role Mappings
    role_mappings:
      admin: "arn:aws:iam::{{ aws_account_id }}:role/AdminRole"
      developer: "arn:aws:iam::{{ aws_account_id }}:role/DeveloperRole"
      readonly: "arn:aws:iam::{{ aws_account_id }}:role/ReadOnlyRole"

    # MFA Configuration
    mfa_serial: ""
    mfa_required: false

    # Script Configuration
    script_dir: "{{ ansible_env.HOME }}/.local/bin"
    config_dir: "{{ ansible_env.HOME }}/.config/yubikey-aws"

  tasks:
    - name: Check if running on supported platform
      ansible.builtin.fail:
        msg: "This playbook must be run on a Linux system with YubiKey support"
      when: ansible_os_family != "RedHat" and ansible_os_family != "Debian"

    - name: Install required packages (RedHat/CentOS)
      ansible.builtin.package:
        name:
          - awscli
          - jq
          - openssl
          - yubikey-manager
        state: present
      when: ansible_os_family == "RedHat"

    - name: Install required packages (Debian/Ubuntu)
      ansible.builtin.package:
        name:
          - awscli
          - jq
          - openssl
          - yubikey-manager
        state: present
      when: ansible_os_family == "Debian"

    - name: Create configuration directory
      ansible.builtin.file:
        path: "{{ config_dir }}"
        state: directory
        mode: '0700'
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"

    - name: Create script directory
      ansible.builtin.file:
        path: "{{ script_dir }}"
        state: directory
        mode: '0755'
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"

    - name: Generate YubiKey AWS assume role script
      ansible.builtin.template:
        src: yubikey-assume-role.sh.j2
        dest: "{{ script_dir }}/yubikey-assume-role"
        mode: '0755'
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"

    - name: Generate configuration file
      ansible.builtin.template:
        src: yubikey-aws-config.conf.j2
        dest: "{{ config_dir }}/yubikey-aws-config.conf"
        mode: '0600'
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"

    - name: Generate shell completion script
      ansible.builtin.template:
        src: yubikey-assume-role-completion.bash.j2
        dest: "{{ config_dir }}/yubikey-assume-role-completion.bash"
        mode: '0644'
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"

    - name: Add completion script to bashrc
      ansible.builtin.lineinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        line: "source {{ config_dir }}/yubikey-assume-role-completion.bash"
        create: true
        mode: '0644'
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"

    - name: Create alias for easy access
      ansible.builtin.lineinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        line: "alias yk-aws='{{ script_dir }}/yubikey-assume-role'"
        create: true
        mode: '0644'
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"

    - name: Check YubiKey presence
      ansible.builtin.command: ykman info
  register: yubikey_check
      failed_when: false
      changed_when: false

    - name: Display YubiKey status
      ansible.builtin.debug:
        msg: "{{ yubikey_check.stdout_lines[0] if yubikey_check.rc == 0 else 'No YubiKey detected' }}"

    - name: Verify AWS CLI configuration
      ansible.builtin.command: aws sts get-caller-identity
  register: aws_identity
      failed_when: false
      changed_when: false

    - name: Display AWS identity
      ansible.builtin.debug:
        msg: "{{ aws_identity.stdout if aws_identity.rc == 0 else 'AWS CLI not configured or no valid credentials' }}"

    - name: Create usage documentation
      ansible.builtin.template:
        src: YUBIKEY_AWS_USAGE.md.j2
        dest: "{{ config_dir }}/README.md"
        mode: '0644'
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"

    - name: Display setup completion message
      ansible.builtin.debug:
        msg: |
          YubiKey AWS Assume Role setup completed!

          Configuration file: {{ config_dir }}/yubikey-aws-config.conf
          Script location: {{ script_dir }}/yubikey-assume-role
          Alias: yk-aws

          Usage:
            yk-aws assume admin
            yk-aws interactive
            yk-aws list

          Please edit the configuration file with your specific settings.
