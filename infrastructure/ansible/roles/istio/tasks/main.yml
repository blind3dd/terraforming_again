---
# Main tasks for Istio role
- name: Install Istio CLI if not present
  block:
    - name: Check if Istio CLI is installed
      command: istioctl version --short
      register: istioctl_check
      failed_when: false
      changed_when: false

    - name: Download and install Istio CLI
      shell: |
        curl -L https://istio.io/downloadIstio | sh -
        sudo mv istio-{{ istio_version }}/bin/istioctl /usr/local/bin/
        rm -rf istio-{{ istio_version }}
      when: istioctl_check.rc != 0

    - name: Verify Istio CLI installation
      command: istioctl version --short
      register: istioctl_version
      changed_when: false

    - name: Display Istio CLI version
      debug:
        msg: "Istio CLI version: {{ istioctl_version.stdout }}"

- name: Create istio-system namespace
  kubernetes.core.k8s:
    name: istio-system
    api_version: v1
    kind: Namespace
    state: present
    labels:
      name: istio-system
      istio-injection: enabled

- name: Install Istio using istioctl
  shell: |
    istioctl install --set values.pilot.env.PILOT_ENABLE_OUTBOUND_POLICY=true \
      --set values.global.outboundPolicy.defaultPolicy=DENY \
      --set values.global.meshConfig.outboundPolicy.defaultPolicy=DENY \
      --set values.global.meshConfig.defaultConfig.outboundPolicy=DENY \
      --set values.global.meshConfig.defaultConfig.registryAccess.enabled=true \
      --set values.global.meshConfig.defaultConfig.rdsAccess.enabled=true \
      --set values.global.meshConfig.defaultConfig.awsAccess.enabled=true \
      --set values.global.meshConfig.defaultConfig.dnsAccess.enabled=true \
      --set values.global.meshConfig.defaultConfig.ntpAccess.enabled=true \
      --set values.pilot.env.PILOT_OUTBOUND_REGISTRY="{{ allowed_registries | join(',') }},{{ aws_account_id }}.dkr.ecr.{{ aws_region }}.amazonaws.com" \
      --set values.pilot.env.PILOT_OUTBOUND_RDS_ENDPOINTS="{{ rds_endpoint }},{{ rds_fqdn }}" \
      --set values.ztunnel.env.ZTUNNEL_ENABLE_OUTBOUND_POLICY=true \
      --set values.ztunnel.env.ZTUNNEL_OUTBOUND_REGISTRY="{{ allowed_registries | join(',') }},{{ aws_account_id }}.dkr.ecr.{{ aws_region }}.amazonaws.com" \
      --set values.ztunnel.env.ZTUNNEL_OUTBOUND_RDS_ENDPOINTS="{{ rds_endpoint }},{{ rds_fqdn }}" \
      -y
  when: deploy_istio_ambient | default(true)
  notify: restart istio services

- name: Deploy Istio Ambient Configuration
  kubernetes.core.k8s:
    state: present
    src: "{{ playbook_dir }}/../templates/istio-ambient-config.yml.j2"
  when: deploy_istio_ambient | default(true)

- name: Deploy Istio Gateway
  kubernetes.core.k8s:
    state: present
    src: "{{ playbook_dir }}/../templates/istio-gateway.yml.j2"
  when: enable_istio_ingress | default(true)

- name: Deploy Istio Egress Gateway
  kubernetes.core.k8s:
    state: present
    src: "{{ playbook_dir }}/../templates/istio-egress.yml.j2"
  when: enable_istio_egress | default(true)

- name: Deploy Istio Destination Rules
  kubernetes.core.k8s:
    state: present
    src: "{{ playbook_dir }}/../templates/istio-destination-rules.yml.j2"
  when: deploy_istio_ambient | default(true)

- name: Deploy Istio Virtual Services
  kubernetes.core.k8s:
    state: present
    src: "{{ playbook_dir }}/../templates/istio-virtual-services.yml.j2"
  when: deploy_istio_ambient | default(true)

- name: Deploy Istio Authorization Policies
  kubernetes.core.k8s:
    state: present
    src: "{{ playbook_dir }}/../templates/istio-auth-policies.yml.j2"
  when: enable_network_policies | default(true)

- name: Deploy Istio Peer Authentication
  kubernetes.core.k8s:
    state: present
    src: "{{ playbook_dir }}/../templates/istio-peer-auth.yml.j2"
  when: enable_mtls | default(true)

- name: Wait for Istio deployments to be ready
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: Deployment
    namespace: istio-system
    label_selectors:
      - app=istiod
      - app=ztunnel
  register: istio_deployments
  until: istio_deployments.resources | selectattr('status.conditions') | selectattr('type', 'equalto', 'Available') | map(attribute='status') | list | length > 0
  retries: 30
  delay: 10
  when: deploy_istio_ambient | default(true)

- name: Verify Istio installation
  shell: istioctl verify-install
  register: istio_verify
  failed_when: istio_verify.rc != 0
  when: deploy_istio_ambient | default(true)

- name: Display Istio verification results
  debug:
    msg: "{{ istio_verify.stdout_lines }}"
  when: deploy_istio_ambient | default(true)
