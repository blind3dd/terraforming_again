---
# Main tasks for Kubernetes Operators role
- name: Install Helm if not present
  block:
    - name: Check if Helm is installed
      ansible.builtin.command: helm version --short
        register: helm_check
        failed_when: false
        changed_when: false

    - name: Install Helm
      ansible.builtin.shell: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      when: helm_check.rc != 0

    - name: Verify Helm installation
      ansible.builtin.command: helm version --short
        register: helm_version
        changed_when: false

    - name: Display Helm version
      ansible.builtin.debug:
        msg: "Helm version: {{ helm_version.stdout }}"

- name: Add Helm repositories
    kubernetes.core.helm_repository:
    name: "{{ item.name }}"
    repo_url: "{{ item.url }}"
  loop:
    - name: hashicorp
      url: https://helm.releases.hashicorp.com
    - name: terraform-operator
      url: https://github.com/oam-dev/terraform-controller/releases/download/v0.8.0
    - name: ansible-operator
      url: https://operatorhub.io/charts

- name: Create namespace for operators
    kubernetes.core.k8s:
    name: "{{ k8s_operators_namespace }}"
    api_version: v1
    kind: Namespace
    state: present

- name: Install Terraform Operator
    kubernetes.core.helm:
    name: terraform-operator
    chart_ref: terraform-operator/terraform-operator
    release_namespace: "{{ k8s_operators_namespace }}"
    create_namespace: false
    values:
    replicaCount: "{{ terraform_operator_replicas }}"
    image:
    repository: "{{ terraform_operator_image_repository }}"
    tag: "{{ terraform_operator_image_tag }}"
    pullPolicy: "{{ terraform_operator_image_pull_policy }}"
    resources:
    requests:
    cpu: "{{ terraform_operator_cpu_request }}"
    memory: "{{ terraform_operator_memory_request }}"
    limits:
    cpu: "{{ terraform_operator_cpu_limit }}"
    memory: "{{ terraform_operator_memory_limit }}"
    serviceAccount:
    create: true
    name: terraform-operator
    rbac:
    create: true
  when: install_terraform_operator | default(true)

- name: Install HashiCorp Vault Operator
    kubernetes.core.helm:
    name: vault-operator
    chart_ref: hashicorp/vault-operator
    release_namespace: "{{ k8s_operators_namespace }}"
    create_namespace: false
    values:
    replicaCount: "{{ vault_operator_replicas }}"
    image:
    repository: "{{ vault_operator_image_repository }}"
    tag: "{{ vault_operator_image_tag }}"
    pullPolicy: "{{ vault_operator_image_pull_policy }}"
    resources:
    requests:
    cpu: "{{ vault_operator_cpu_request }}"
    memory: "{{ vault_operator_memory_request }}"
    limits:
    cpu: "{{ vault_operator_cpu_limit }}"
    memory: "{{ vault_operator_memory_limit }}"
    serviceAccount:
    create: true
    name: vault-operator
    rbac:
    create: true
    vault:
    enabled: "{{ install_vault_server | default(false) }}"
    server:
    replicas: "{{ vault_server_replicas | default(1) }}"
    image:
    repository: "{{ vault_server_image_repository | default('hashicorp/vault') }}"
    tag: "{{ vault_server_image_tag | default('latest') }}"
    resources:
    requests:
    cpu: "{{ vault_server_cpu_request | default('100m') }}"
    memory: "{{ vault_server_memory_request | default('256Mi') }}"
    limits:
    cpu: "{{ vault_server_cpu_limit | default('500m') }}"
    memory: "{{ vault_server_memory_limit | default('512Mi') }}"
  when: install_vault_operator | default(true)

- name: Install Ansible Operator
    kubernetes.core.helm:
    name: ansible-operator
    chart_ref: ansible-operator/ansible-operator
    release_namespace: "{{ k8s_operators_namespace }}"
    create_namespace: false
    values:
    replicaCount: "{{ ansible_operator_replicas }}"
    image:
    repository: "{{ ansible_operator_image_repository }}"
    tag: "{{ ansible_operator_image_tag }}"
    pullPolicy: "{{ ansible_operator_image_pull_policy }}"
    resources:
    requests:
    cpu: "{{ ansible_operator_cpu_request }}"
    memory: "{{ ansible_operator_memory_request }}"
    limits:
    cpu: "{{ ansible_operator_cpu_limit }}"
    memory: "{{ ansible_operator_memory_limit }}"
    serviceAccount:
    create: true
    name: ansible-operator
    rbac:
    create: true
    ansible:
    vaultPassword: "{{ ansible_vault_password }}"
    inventory: "{{ ansible_inventory_path | default('/etc/ansible/inventory') }}"
  when: install_ansible_operator | default(true)

- name: Wait for operators to be ready
    kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: Deployment
    namespace: "{{ k8s_operators_namespace }}"
    label_selectors:
      - app.kubernetes.io/name=terraform-operator
      - app.kubernetes.io/name=vault-operator
      - app.kubernetes.io/name=ansible-operator
  register: operator_deployments
  until: operator_deployments.resources | length >= 3
  retries: 30
  delay: 10

- name: Verify operator deployments
    kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: Deployment
    namespace: "{{ k8s_operators_namespace }}"
  register: all_deployments

- name: Display operator status
    ansible.builtin.debug:
    msg: "Operator {{ item.metadata.name }} is {{ item.status.conditions | selectattr('type', 'equalto', 'Available') | map(attribute='status') | first }}"
  loop: "{{ all_deployments.resources }}"
  when: item.metadata.name in ['terraform-operator', 'vault-operator', 'ansible-operator']
