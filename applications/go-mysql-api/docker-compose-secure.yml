version: '3.8'

services:
  go-mysql-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go-mysql-api
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=${DB_NAME:-mock_user}
      - DB_USER=${DB_USER:-db_user}
      - DB_PASSWORD=${DB_PASSWORD}
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=${DB_NAME:-mock_user}
      - MYSQL_USER=${DB_USER:-db_user}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    depends_on:
      - mysql
    volumes:
      - ./config:/app/config:ro
      - ./logs:/app/logs
    networks:
      - app-network
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME:-mock_user}
      - MYSQL_USER=${DB_USER:-db_user}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - app-network
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - PMA_USER=${DB_USER:-db_user}
      - PMA_PASSWORD=${DB_PASSWORD}
    ports:
      - "8081:80"
    depends_on:
      - mysql
    networks:
      - app-network
    restart: unless-stopped

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge



