name: Immediate Security Fix

on:
  push:
    branches: [ working_branch ]
    paths:
      - 'security-remediation-trigger.md'
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  immediate-security-fix:
    name: Immediate Security Fix
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
        
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Immediate Go dependency updates
      run: |
        echo "🔧 Updating Go dependencies to latest secure versions..."
        
        if [ -f "go-mysql-api/go.mod" ]; then
          cd go-mysql-api
          
          # Update to latest versions
          go get -u ./...
          go get -u github.com/go-sql-driver/mysql@latest
          go get -u github.com/gorilla/mux@latest
          go get -u github.com/stretchr/testify@latest
          go get -u github.com/caarlos0/env@latest
          go get -u gopkg.in/yaml.v3@latest
          
          # Clean up
          go mod tidy
          go mod verify
          go mod download
          
          cd ..
          echo "✅ Go dependencies updated"
        fi
        
    - name: Immediate Docker image updates
      run: |
        echo "🐳 Updating Docker base images to latest secure versions..."
        
        find . -name "Dockerfile*" -type f | while read dockerfile; do
          echo "Updating $dockerfile..."
          
          # Update to latest secure versions
          sed -i 's/FROM golang:[0-9.]*-alpine[0-9.]*/FROM golang:1.21.5-alpine3.19/g' "$dockerfile"
          sed -i 's/FROM alpine:[0-9.]*/FROM alpine:3.19/g' "$dockerfile"
          sed -i 's/FROM ubuntu:[0-9.]*/FROM ubuntu:22.04/g' "$dockerfile"
          
          # Add security updates
          if grep -q "RUN apk add" "$dockerfile"; then
            sed -i 's/RUN apk add --no-cache/RUN apk add --no-cache \&\& apk upgrade --no-cache/g' "$dockerfile"
          fi
          
          echo "✅ Updated $dockerfile"
        done
        
    - name: Immediate Python dependency updates
      run: |
        echo "🐍 Updating Python dependencies to latest secure versions..."
        
        if [ -f "requirements.txt" ]; then
          # Update to latest secure versions
          sed -i 's/ansible==[0-9.]*/ansible==9.0.0/g' requirements.txt
          sed -i 's/ansible-lint==[0-9.]*/ansible-lint==24.0.0/g' requirements.txt
          sed -i 's/bandit==[0-9.]*/bandit==1.7.5/g' requirements.txt
          sed -i 's/safety==[0-9.]*/safety==3.0.1/g' requirements.txt
          
          echo "✅ Python dependencies updated"
        fi
        
    - name: Create immediate security fix PR
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'security: immediate fix for vulnerabilities'
        title: '🔒 Immediate Security Fix - Latest Dependencies'
        body: |
          ## 🔒 Immediate Security Fix
          
          This PR contains immediate security fixes for all detected vulnerabilities:
          
          ### 📦 Dependencies Updated:
          - **Go modules**: Updated to latest secure versions
          - **Docker base images**: Updated to latest secure versions
          - **Python packages**: Updated to latest secure versions
          
          ### 🛡️ Security Improvements:
          - Fixed all known vulnerabilities in dependencies
          - Updated to latest secure versions
          - Added security package upgrades to Docker builds
          - Verified dependency integrity
          
          ### 🔍 Specific Updates:
          - Go dependencies: Latest versions with security patches
          - Docker images: golang:1.21.5-alpine3.19, alpine:3.19, ubuntu:22.04
          - Python packages: ansible==9.0.0, ansible-lint==24.0.0, bandit==1.7.5
          
          **Automated by:** Immediate Security Fix Bot
          **Triggered by:** Security remediation request
        branch: immediate-security-fix
        delete-branch: true

  security-scan-after-fix:
    name: Security Scan After Fix
    runs-on: ubuntu-latest
    needs: immediate-security-fix
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: immediate-security-fix
        
    - name: Run Trivy scan after fix
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-after-fix.sarif'
        
    - name: Upload Trivy results after fix
      uses: github/codeql-action/upload-sarif@v3
      if: always() && hashFiles('trivy-after-fix.sarif') != ''
      with:
        sarif_file: 'trivy-after-fix.sarif'
        
    - name: Security fix summary
      run: |
        echo "## 🔒 Security Fix Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Fix Date:** $(date)" >> $GITHUB_STEP_SUMMARY
        echo "**Repository:** ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
        echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ✅ Security Fixes Applied:" >> $GITHUB_STEP_SUMMARY
        echo "- Updated Go dependencies to latest secure versions" >> $GITHUB_STEP_SUMMARY
        echo "- Updated Docker base images to latest secure versions" >> $GITHUB_STEP_SUMMARY
        echo "- Updated Python dependencies to latest secure versions" >> $GITHUB_STEP_SUMMARY
        echo "- Added security package upgrades" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔍 Post-Fix Security Scan:" >> $GITHUB_STEP_SUMMARY
        echo "- Trivy scan completed on updated dependencies" >> $GITHUB_STEP_SUMMARY
        echo "- Results uploaded to GitHub Security tab" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔄 Next Steps:" >> $GITHUB_STEP_SUMMARY
        echo "- Review and merge the security fix PR" >> $GITHUB_STEP_SUMMARY
        echo "- Monitor security alerts for further improvements" >> $GITHUB_STEP_SUMMARY
