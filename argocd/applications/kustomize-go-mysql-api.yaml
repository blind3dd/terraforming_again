apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: go-mysql-api-kustomize
  namespace: argocd
  labels:
    app.kubernetes.io/name: go-mysql-api
    app.kubernetes.io/part-of: database-ci
    app.kubernetes.io/component: api
    deployment-method: kustomize
  annotations:
    argocd.argoproj.io/sync-wave: "2"
    argocd.argoproj.io/sync-options: CreateNamespace=true
    argocd.argoproj.io/sync-options: PrunePropagationPolicy=foreground
    argocd.argoproj.io/sync-options: PruneLast=true
spec:
  project: database-ci-project
  
  source:
    repoURL: https://github.com/blind3dd/database_CI.git
    targetRevision: HEAD
    path: kustomize/go-mysql-api/overlays/${{ env.ENVIRONMENT || 'dev' }}
    kustomize:
      images:
        - name: go-mysql-api
          newTag: ${{ github.sha }}
        - name: go-mysql-api
          newName: ${{ steps.login-ecr.outputs.registry }}/go-mysql-api
      commonLabels:
        app.kubernetes.io/name: go-mysql-api
        app.kubernetes.io/part-of: database-ci
        app.kubernetes.io/component: api
        app.kubernetes.io/version: ${{ github.sha }}
        app.kubernetes.io/managed-by: argocd
      commonAnnotations:
        argocd.argoproj.io/sync-wave: "2"
        deployment.kubernetes.io/revision: ${{ github.run_number }}
        image.updater.argoproj.io/go-mysql-api: ${{ steps.login-ecr.outputs.registry }}/go-mysql-api:${{ github.sha }}
      patches:
        - target:
            kind: Deployment
            name: go-mysql-api
          patch: |-
            - op: replace
              path: /spec/replicas
              value: ${{ env.REPLICA_COUNT || '2' }}
            - op: replace
              path: /spec/template/spec/containers/0/resources/limits/cpu
              value: ${{ env.CPU_LIMIT || '500m' }}
            - op: replace
              path: /spec/template/spec/containers/0/resources/limits/memory
              value: ${{ env.MEMORY_LIMIT || '512Mi' }}
            - op: replace
              path: /spec/template/spec/containers/0/resources/requests/cpu
              value: ${{ env.CPU_REQUEST || '100m' }}
            - op: replace
              path: /spec/template/spec/containers/0/resources/requests/memory
              value: ${{ env.MEMORY_REQUEST || '128Mi' }}
        - target:
            kind: Service
            name: go-mysql-api-service
          patch: |-
            - op: replace
              path: /spec/type
              value: ${{ env.SERVICE_TYPE || 'ClusterIP' }}
        - target:
            kind: HorizontalPodAutoscaler
            name: go-mysql-api-hpa
          patch: |-
            - op: replace
              path: /spec/minReplicas
              value: ${{ env.HPA_MIN_REPLICAS || '2' }}
            - op: replace
              path: /spec/maxReplicas
              value: ${{ env.HPA_MAX_REPLICAS || '10' }}
            - op: replace
              path: /spec/metrics/0/resource/target/averageUtilization
              value: ${{ env.HPA_CPU_TARGET || '80' }}
            - op: replace
              path: /spec/metrics/1/resource/target/averageUtilization
              value: ${{ env.HPA_MEMORY_TARGET || '80' }}
        - target:
            kind: PodDisruptionBudget
            name: go-mysql-api-pdb
          patch: |-
            - op: replace
              path: /spec/minAvailable
              value: ${{ env.PDB_MIN_AVAILABLE || '1' }}
        - target:
            kind: NetworkPolicy
            name: go-mysql-api-netpol
          patch: |-
            - op: replace
              path: /spec/ingress/0/from/0/namespaceSelector/matchLabels/name
              value: ${{ env.INGRESS_NAMESPACE || 'ingress-nginx' }}
        - target:
            kind: ConfigMap
            name: app-config
          patch: |-
            - op: replace
              path: /data/config.yaml
              value: |
                database:
                  host: ${{ env.RDS_ENDPOINT }}
                  port: 3306
                  name: mock_user
                  ssl: true
                  ssl_mode: require
                app:
                  port: 8088
                  log_level: ${{ env.LOG_LEVEL || 'info' }}
                  metrics_enabled: true
                  environment: ${{ env.ENVIRONMENT || 'dev' }}
                aws:
                  region: ${{ env.AWS_REGION }}
                  endpoint: ${{ env.AWS_ENDPOINT }}
        - target:
            kind: Secret
            name: rds-credentials
          patch: |-
            - op: replace
              path: /data/username
              value: ${{ env.RDS_USERNAME | b64encode }}
            - op: replace
              path: /data/password
              value: ${{ env.RDS_PASSWORD | b64encode }}
            - op: replace
              path: /data/host
              value: ${{ env.RDS_ENDPOINT | b64encode }}
            - op: replace
              path: /data/port
              value: ${{ env.RDS_PORT || '3306' | b64encode }}
        - target:
            kind: Ingress
            name: go-mysql-api-ingress
          patch: |-
            - op: replace
              path: /spec/rules/0/host
              value: go-mysql-api.${{ env.DOMAIN_NAME }}
            - op: replace
              path: /spec/tls/0/hosts/0
              value: go-mysql-api.${{ env.DOMAIN_NAME }}
            - op: replace
              path: /spec/tls/0/secretName
              value: go-mysql-api-tls
        - target:
            kind: VirtualService
            name: go-mysql-api-vs
          patch: |-
            - op: replace
              path: /spec/hosts/0
              value: go-mysql-api.${{ env.DOMAIN_NAME }}
            - op: replace
              path: /spec/gateways/0
              value: istio-ingressgateway.istio-system
            - op: replace
              path: /spec/http/0/route/0/destination/host
              value: go-mysql-api-service
            - op: replace
              path: /spec/http/0/route/0/destination/port/number
              value: ${{ env.APP_PORT || '8088' }}
        - target:
            kind: DestinationRule
            name: go-mysql-api-dr
          patch: |-
            - op: replace
              path: /spec/host
              value: go-mysql-api-service
            - op: replace
              path: /spec/trafficPolicy/loadBalancer/simple
              value: ${{ env.LB_ALGORITHM || 'ROUND_ROBIN' }}
            - op: replace
              path: /spec/trafficPolicy/connectionPool/tcp/maxConnections
              value: ${{ env.MAX_CONNECTIONS || '100' }}
            - op: replace
              path: /spec/trafficPolicy/connectionPool/http/http1MaxPendingRequests
              value: ${{ env.MAX_PENDING_REQUESTS || '1024' }}
            - op: replace
              path: /spec/trafficPolicy/connectionPool/http/maxRequestsPerConnection
              value: ${{ env.MAX_REQUESTS_PER_CONNECTION || '10' }}
            - op: replace
              path: /spec/trafficPolicy/outlierDetection/consecutive5xxErrors
              value: ${{ env.CONSECUTIVE_5XX_ERRORS || '5' }}
            - op: replace
              path: /spec/trafficPolicy/outlierDetection/interval
              value: ${{ env.OUTLIER_DETECTION_INTERVAL || '30s' }}
            - op: replace
              path: /spec/trafficPolicy/outlierDetection/baseEjectionTime
              value: ${{ env.BASE_EJECTION_TIME || '30s' }}
            - op: replace
              path: /spec/trafficPolicy/outlierDetection/maxEjectionPercent
              value: ${{ env.MAX_EJECTION_PERCENT || '10' }}
        - target:
            kind: AuthorizationPolicy
            name: go-mysql-api-authz
          patch: |-
            - op: replace
              path: /spec/action
              value: ${{ env.AUTHZ_ACTION || 'ALLOW' }}
        - target:
            kind: PeerAuthentication
            name: go-mysql-api-mtls
          patch: |-
            - op: replace
              path: /spec/mtls/mode
              value: ${{ env.MTLS_MODE || 'STRICT' }}
    
  destination:
    server: https://kubernetes.default.svc
    namespace: go-mysql-api
    
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
    - CreateNamespace=true
    - PrunePropagationPolicy=foreground
    - PruneLast=true
    - RespectIgnoreDifferences=true
    - ApplyOutOfSyncOnly=true
    - ServerSideApply=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
    
  revisionHistoryLimit: 10
  
  # Health checks
  healthChecks:
  - apiVersion: v1
    kind: Service
    name: go-mysql-api-service
    namespace: go-mysql-api
  - apiVersion: apps/v1
    kind: Deployment
    name: go-mysql-api
    namespace: go-mysql-api
  - apiVersion: autoscaling/v2
    kind: HorizontalPodAutoscaler
    name: go-mysql-api-hpa
    namespace: go-mysql-api
  - apiVersion: policy/v1
    kind: PodDisruptionBudget
    name: go-mysql-api-pdb
    namespace: go-mysql-api
  - apiVersion: networking.k8s.io/v1
    kind: Ingress
    name: go-mysql-api-ingress
    namespace: go-mysql-api
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    name: go-mysql-api-netpol
    namespace: go-mysql-api
  - apiVersion: networking.istio.io/v1beta1
    kind: VirtualService
    name: go-mysql-api-vs
    namespace: go-mysql-api
  - apiVersion: networking.istio.io/v1beta1
    kind: DestinationRule
    name: go-mysql-api-dr
    namespace: go-mysql-api
  - apiVersion: security.istio.io/v1beta1
    kind: AuthorizationPolicy
    name: go-mysql-api-authz
    namespace: go-mysql-api
  - apiVersion: security.istio.io/v1beta1
    kind: PeerAuthentication
    name: go-mysql-api-mtls
    namespace: go-mysql-api
  - apiVersion: v1
    kind: ConfigMap
    name: app-config
    namespace: go-mysql-api
  - apiVersion: v1
    kind: Secret
    name: rds-credentials
    namespace: go-mysql-api

---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: go-mysql-api-kustomize-dev
  namespace: argocd
  labels:
    app.kubernetes.io/name: go-mysql-api
    app.kubernetes.io/part-of: database-ci
    app.kubernetes.io/component: api
    app.kubernetes.io/environment: dev
    deployment-method: kustomize
  annotations:
    argocd.argoproj.io/sync-wave: "2"
    argocd.argoproj.io/sync-options: CreateNamespace=true
    argocd.argoproj.io/sync-options: PrunePropagationPolicy=foreground
    argocd.argoproj.io/sync-options: PruneLast=true
spec:
  project: database-ci-project
  
  source:
    repoURL: https://github.com/blind3dd/database_CI.git
    targetRevision: HEAD
    path: kustomize/go-mysql-api/overlays/dev
    kustomize:
      images:
        - name: go-mysql-api
          newTag: ${{ github.sha }}
        - name: go-mysql-api
          newName: ${{ steps.login-ecr.outputs.registry }}/go-mysql-api
      commonLabels:
        app.kubernetes.io/name: go-mysql-api
        app.kubernetes.io/part-of: database-ci
        app.kubernetes.io/component: api
        app.kubernetes.io/version: ${{ github.sha }}
        app.kubernetes.io/environment: dev
        app.kubernetes.io/managed-by: argocd
      commonAnnotations:
        argocd.argoproj.io/sync-wave: "2"
        deployment.kubernetes.io/revision: ${{ github.run_number }}
        image.updater.argoproj.io/go-mysql-api: ${{ steps.login-ecr.outputs.registry }}/go-mysql-api:${{ github.sha }}
      patches:
        - target:
            kind: Deployment
            name: go-mysql-api
          patch: |-
            - op: replace
              path: /spec/replicas
              value: 1
            - op: replace
              path: /spec/template/spec/containers/0/resources/limits/cpu
              value: "250m"
            - op: replace
              path: /spec/template/spec/containers/0/resources/limits/memory
              value: "256Mi"
            - op: replace
              path: /spec/template/spec/containers/0/resources/requests/cpu
              value: "50m"
            - op: replace
              path: /spec/template/spec/containers/0/resources/requests/memory
              value: "64Mi"
        - target:
            kind: HorizontalPodAutoscaler
            name: go-mysql-api-hpa
          patch: |-
            - op: replace
              path: /spec/minReplicas
              value: 1
            - op: replace
              path: /spec/maxReplicas
              value: 3
            - op: replace
              path: /spec/metrics/0/resource/target/averageUtilization
              value: 70
            - op: replace
              path: /spec/metrics/1/resource/target/averageUtilization
              value: 70
        - target:
            kind: ConfigMap
            name: app-config
          patch: |-
            - op: replace
              path: /data/config.yaml
              value: |
                database:
                  host: ${{ env.RDS_ENDPOINT_DEV }}
                  port: 3306
                  name: mock_user_dev
                  ssl: true
                  ssl_mode: require
                app:
                  port: 8088
                  log_level: debug
                  metrics_enabled: true
                  environment: dev
                aws:
                  region: ${{ env.AWS_REGION }}
                  endpoint: ${{ env.AWS_ENDPOINT }}
        - target:
            kind: Secret
            name: rds-credentials
          patch: |-
            - op: replace
              path: /data/username
              value: ${{ env.RDS_USERNAME_DEV | b64encode }}
            - op: replace
              path: /data/password
              value: ${{ env.RDS_PASSWORD_DEV | b64encode }}
            - op: replace
              path: /data/host
              value: ${{ env.RDS_ENDPOINT_DEV | b64encode }}
            - op: replace
              path: /data/port
              value: "3306" | b64encode
        - target:
            kind: Ingress
            name: go-mysql-api-ingress
          patch: |-
            - op: replace
              path: /spec/rules/0/host
              value: go-mysql-api-dev.${{ env.DOMAIN_NAME }}
            - op: replace
              path: /spec/tls/0/hosts/0
              value: go-mysql-api-dev.${{ env.DOMAIN_NAME }}
            - op: replace
              path: /spec/tls/0/secretName
              value: go-mysql-api-dev-tls
        - target:
            kind: VirtualService
            name: go-mysql-api-vs
          patch: |-
            - op: replace
              path: /spec/hosts/0
              value: go-mysql-api-dev.${{ env.DOMAIN_NAME }}
            - op: replace
              path: /spec/gateways/0
              value: istio-ingressgateway.istio-system
            - op: replace
              path: /spec/http/0/route/0/destination/host
              value: go-mysql-api-service
            - op: replace
              path: /spec/http/0/route/0/destination/port/number
              value: 8088
        - target:
            kind: DestinationRule
            name: go-mysql-api-dr
          patch: |-
            - op: replace
              path: /spec/host
              value: go-mysql-api-service
            - op: replace
              path: /spec/trafficPolicy/loadBalancer/simple
              value: ROUND_ROBIN
            - op: replace
              path: /spec/trafficPolicy/connectionPool/tcp/maxConnections
              value: 50
            - op: replace
              path: /spec/trafficPolicy/connectionPool/http/http1MaxPendingRequests
              value: 512
            - op: replace
              path: /spec/trafficPolicy/connectionPool/http/maxRequestsPerConnection
              value: 5
            - op: replace
              path: /spec/trafficPolicy/outlierDetection/consecutive5xxErrors
              value: 3
            - op: replace
              path: /spec/trafficPolicy/outlierDetection/interval
              value: 30s
            - op: replace
              path: /spec/trafficPolicy/outlierDetection/baseEjectionTime
              value: 30s
            - op: replace
              path: /spec/trafficPolicy/outlierDetection/maxEjectionPercent
              value: 10
        - target:
            kind: AuthorizationPolicy
            name: go-mysql-api-authz
          patch: |-
            - op: replace
              path: /spec/action
              value: ALLOW
        - target:
            kind: PeerAuthentication
            name: go-mysql-api-mtls
          patch: |-
            - op: replace
              path: /spec/mtls/mode
              value: PERMISSIVE
    
  destination:
    server: https://kubernetes.default.svc
    namespace: go-mysql-api-dev
    
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
    - CreateNamespace=true
    - PrunePropagationPolicy=foreground
    - PruneLast=true
    - RespectIgnoreDifferences=true
    - ApplyOutOfSyncOnly=true
    - ServerSideApply=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
    
  revisionHistoryLimit: 10
  
  # Health checks
  healthChecks:
  - apiVersion: v1
    kind: Service
    name: go-mysql-api-service
    namespace: go-mysql-api-dev
  - apiVersion: apps/v1
    kind: Deployment
    name: go-mysql-api
    namespace: go-mysql-api-dev
  - apiVersion: autoscaling/v2
    kind: HorizontalPodAutoscaler
    name: go-mysql-api-hpa
    namespace: go-mysql-api-dev
  - apiVersion: policy/v1
    kind: PodDisruptionBudget
    name: go-mysql-api-pdb
    namespace: go-mysql-api-dev
  - apiVersion: networking.k8s.io/v1
    kind: Ingress
    name: go-mysql-api-ingress
    namespace: go-mysql-api-dev
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    name: go-mysql-api-netpol
    namespace: go-mysql-api-dev
  - apiVersion: networking.istio.io/v1beta1
    kind: VirtualService
    name: go-mysql-api-vs
    namespace: go-mysql-api-dev
  - apiVersion: networking.istio.io/v1beta1
    kind: DestinationRule
    name: go-mysql-api-dr
    namespace: go-mysql-api-dev
  - apiVersion: security.istio.io/v1beta1
    kind: AuthorizationPolicy
    name: go-mysql-api-authz
    namespace: go-mysql-api-dev
  - apiVersion: security.istio.io/v1beta1
    kind: PeerAuthentication
    name: go-mysql-api-mtls
    namespace: go-mysql-api-dev
  - apiVersion: v1
    kind: ConfigMap
    name: app-config
    namespace: go-mysql-api-dev
  - apiVersion: v1
    kind: Secret
    name: rds-credentials
    namespace: go-mysql-api-dev

